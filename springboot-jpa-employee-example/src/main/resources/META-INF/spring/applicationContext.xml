<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans.xsd 
	                    http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd 
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd 
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd 
                        http://www.springframework.org/schema/data/jpa 
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:component-scan base-package="com.kyanja" />
    
    <jpa:repositories base-package="com.kyanja.repository" />

    <context:property-placeholder location="classpath*:application.properties" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<constructor-arg ref="entityManagerFactory" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.kyanja" />
	    <property name="jpaVendorAdapter" ref="hibernateVendorAdapter" />
	    <property name="dataSource" ref="dataSource" />
	     <property name="jpaProperties">
            <props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <prop key="hibernate.dialect">${spring.jpa.properties.hibernate.dialect}</prop>

                <!--
                    Specifies the action that is invoked to the database when the Hibernate
                    SessionFactory is created or closed.
                -->
                <prop key="hibernate.hbm2ddl.auto">${spring.jpa.hibernate.ddl-auto}</prop>

                <!--
                    Configures the naming strategy that is used when Hibernate creates
                    new database objects and schema elements
                -->
<!--                 <prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop> -->

                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <prop key="hibernate.show_sql">${spring.jpa.show-sql}</prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
<!--                 <prop key="hibernate.format_sql">${hibernate.show_sql}</prop> -->
            </props>
        </property>
	</bean>
	
	<bean id="hibernateVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

<!--     <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${database.driverClassName}" /> -->
<!-- 		<property name="url" value="${database.url}" /> -->
<!-- 		<property name="username" value="${database.username}" /> -->
<!-- 		<property name="password" value="${database.password}" /> -->
<!-- 	</bean> -->
	
	 <!-- Creates the datasource bean. -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg index="0" ref="hikariConfig"/>
    </bean>
	  <!-- Configures the database connection. -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
<!--         <property name="driverClassName" value="${db.driver}"/> -->
        <property name="jdbcUrl" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
    </bean>
</beans>